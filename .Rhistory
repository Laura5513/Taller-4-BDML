stargazer(train_ori, type = "latex", title = "Estadísticas descriptivas", align = TRUE)
rm(list = ls(all.names = TRUE))
# ------------------------------------------------------------------------------------ #
# Cargar librerias.
# ------------------------------------------------------------------------------------ #
#setwd("C:/Users/nicol/Documents/GitHub/Repositorios/Taller-4-BDML")
setwd("/Users/bray/Desktop/Big Data/Talleres/Taller-4-BDML")
#setwd('C:/Users/sofia/OneDrive/Documentos/GitHub/Taller-4-BDML')
list.of.packages = c("pacman", "readr","tidyverse", "dplyr", "arsenal", "fastDummies",
"caret", "glmnet", "MLmetrics", "skimr", "plyr", "stargazer",
"ggplot2", "plotly", "corrplot", "Hmisc", "sf", "tmaptools",
"osmdata", "leaflet", "rgeos", "yardstick", "SuperLearner",
"adabag")
new.packages = list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages)
sapply(list.of.packages, require, character.only = TRUE)
# ------------------------------------------------------------------------------------ #
# 1. Descripción del problema
# ------------------------------------------------------------------------------------ #
# ------------------------------------------------------------------------------------ #
# 2. Data
# ------------------------------------------------------------------------------------ #
# Train
train_ori <- read_csv("./data/train_final.csv")
id_train <- train_ori$`train$id`
train_ori <- train_ori[, -c(1,3)]
train_ori$name <- as.factor(train_ori$name)
# Test
test_ori <- read_csv("./data/test_final.csv")
# ¿Hay datos vacios?
any(is.na(train_ori)) # No.
any(is.na(test_ori)) # No.
## Estadísticas des
stargazer(train_ori, type = "latex", title = "Estadísticas descriptivas", align = TRUE)
stargazer(id_train, type = "latex", title = "Estadísticas descriptivas", align = TRUE)
View(train_ori)
train_ori <- train_ori %>%
mutate(name = case_when(
nombres == "Uribe" ~ 1,
nombres == "Lopez" ~ 2,
nombres == "petro" ~ 3
))
train_ori <- train_ori %>%
mutate(name = case_when(
name == "Uribe" ~ 1,
name == "Lopez" ~ 2,
name == "petro" ~ 3
))
View(train_ori)
#**************************************************************************************#
# Limpiar el espacio
rm(list = ls(all.names = TRUE))
# ------------------------------------------------------------------------------------ #
# Cargar librerias.
# ------------------------------------------------------------------------------------ #
#setwd("C:/Users/nicol/Documents/GitHub/Repositorios/Taller-4-BDML")
setwd("/Users/bray/Desktop/Big Data/Talleres/Taller-4-BDML")
#setwd('C:/Users/sofia/OneDrive/Documentos/GitHub/Taller-4-BDML')
list.of.packages = c("pacman", "readr","tidyverse", "dplyr", "arsenal", "fastDummies",
"caret", "glmnet", "MLmetrics", "skimr", "plyr", "stargazer",
"ggplot2", "plotly", "corrplot", "Hmisc", "sf", "tmaptools",
"osmdata", "leaflet", "rgeos", "yardstick", "SuperLearner",
"adabag")
new.packages = list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages)
sapply(list.of.packages, require, character.only = TRUE)
# ------------------------------------------------------------------------------------ #
# 1. Descripción del problema
# ------------------------------------------------------------------------------------ #
# ------------------------------------------------------------------------------------ #
# 2. Data
# ------------------------------------------------------------------------------------ #
# Train
train_ori <- read_csv("./data/train_final.csv")
id_train <- train_ori$`train$id`
train_ori <- train_ori[, -c(1,3)]
train_ori$name <- as.factor(train_ori$name)
# Test
test_ori <- read_csv("./data/test_final.csv")
# ¿Hay datos vacios?
any(is.na(train_ori)) # No.
any(is.na(test_ori)) # No.
View(train_ori)
train_des <- train_ori %>%
mutate(name = case_when(
name == "Uribe" ~ 1,
name == "Lopez" ~ 2,
name == "Petro" ~ 3
))
stargazer(train_des, type = "latex", title = "Estadísticas descriptivas", align = TRUE)
View(train_ori)
