list.of.packages = c("pacman", "readr","tidyverse", "dplyr", "arsenal", "fastDummies",
"caret", "glmnet", "MLmetrics", "skimr", "plyr", "stargazer",
"ggplot2", "plotly", "corrplot", "Hmisc", "sf", "tmaptools",
"osmdata", "leaflet", "rgeos", "yardstick", "SuperLearner",
"adabag")
new.packages = list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if(length(new.packages)) install.packages(new.packages)
sapply(list.of.packages, require, character.only = TRUE)
# ------------------------------------------------------------------------------------ #
# 1. Descripción del problema
# ------------------------------------------------------------------------------------ #
# ------------------------------------------------------------------------------------ #
# 2. Data
# ------------------------------------------------------------------------------------ #
# Train
train_ori <- read_csv("./data/train_final.csv")
setwd("/Users/bray/Desktop/Big Data/Talleres/Taller-4-BDML")
# Train
train_ori <- read_csv("./data/train_final.csv")
id_train <- train_ori$`train$id`
train_ori <- train_ori[, -c(1,3)]
train_ori$name <- as.factor(train_ori$name)
# Test
test_ori <- read_csv("./data/test_final.csv")
# ¿Hay datos vacios?
any(is.na(train_ori)) # No.
any(is.na(test_ori)) # No.
View(train_ori)
rownames(train_ori)<-train_ori$name
train_pca<-train_ori[,-1]
train_ori
train_pca
cor(tarin_pca)
cor(train_pca)
res_pca <- prcomp(train_pca)
res_pca
fviz_eig(res_pca, addlabels = TRUE, ylim = c(0, 70))
p_load("factoextra")
eig_val <- get_eigenvalue(res_pca)
eig_val
fviz_eig(res_pca, addlabels = TRUE, ylim = c(0, 70))
ggplot(eig_val,aes(x=1:5,y=cumulative.variance.percent)) +
geom_point()+
geom_line() +
theme_bw()
fviz_pca_biplot(res_pca,
repel = TRUE,# Avoid text overlapping
col.var = "#2E9FDF", # Variables color
col.ind = "#696969"  # Individuals color
)
PCApilot <- prcomp(train_pca, scale=TRUE)
fviz_eig(PCApilot, addlabels = TRUE, ylim = c(0, 45))
round(PCApilot$rotation[,1:3],1)
fviz_pca_biplot(PCApilot,
col.ind = shows$Genre,
palette = c("blue", "green", "red"),
ylim=c(-3,3),
xlim=c(-6,6), # hides "monarch cove",living with ed", and "next" but these are all tiny
invisible ="var",
repel=TRUE,
labelsize = 2
)
p_load("gamlr")
zpilot <- predict(PCApilot)
name <- train_pca$name
name <- train_ori$name
zdf <- as.data.frame(zpilot)
summary(PEglm <- glm(PE ~ ., data=zdf[,1:2]))
summary(PEglm <- glm(name ~ ., data=zdf[,1:2]))
zpilot <- predict(PCApilot)
name <- train_pca$name
zdf <- as.data.frame(zpilot)
summary(PEglm <- glm(name ~ ., data=zdf[,1:2]))
cvlassoboth <- cv.gamlr(x=as.matrix(cbind(Xpilot,zpilot)), y=name, nfold=10)
cvlassoboth <- cv.gamlr(x=as.matrix(cbind(train_pca,zpilot)), y=name, nfold=10)
